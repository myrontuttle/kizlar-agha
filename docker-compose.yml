services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: streamlit-frontend
    ports:
      - "8501:8501"
    restart: unless-stopped
    volumes:
      # This allows access to the host's docker, e.g. for builds:
      - /var/run/docker.sock:/var/run/docker.sock
      - files:/app/files
    command: make run-frontend
    env_file: ".env"
    environment:
      POSTGRES_HOST: db

#  backend:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    container_name: fastapi-backend
#    restart: unless-stopped
#    command: make run-backend
#    ports:
#      - "${FASTAPI_PORT:-8080}:8080"
#    env_file: ".env"
#    environment:
#      POSTGRES_HOST: db
#      DATABASE_URL: postgresql+psycopg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/{POSTGRES_DB

  db:
    image: postgres:${PG_MAJOR:-latest}
    container_name: postgres-db
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 10s
      timeout: 3s
      retries: 3
    volumes:
      - postgres-data:/var/lib/postgresql/data:rw
    ports:
      - "5432:5432"
    env_file: ".env"
    environment:
      POSTGRES_HOST: db

volumes:
  files:
  postgres-data:
